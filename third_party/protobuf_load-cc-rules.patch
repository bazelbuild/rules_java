Backported from https://github.com/protocolbuffers/protobuf/pull/23584 to 32.0:

From 733a0ccf6f53f469352b19440a1d152eccea6bec Mon Sep 17 00:00:00 2001
From: Keith Smiley <keithbsmiley@gmail.com>
Date: Sat, 20 Sep 2025 09:30:37 -0700
Subject: [PATCH] bazel: add missing rules_cc loads

This is required for use with bazel after this commit https://github.com/bazelbuild/bazel/commit/71ca0ed111ff3d842a0d23bc3a46bd2e6745491d

Many files have these already
---
 lua/BUILD.bazel                                    | 3 +++
 pkg/test/BUILD.bazel                               | 1 +
 ruby/ext/google/protobuf_c/BUILD.bazel             | 1 +
 ruby/lib/google/BUILD.bazel                        | 1 +
 rust/defs.bzl                                      | 1 +
 src/google/protobuf/compiler/cpp/BUILD.bazel       | 1 +
 src/google/protobuf/compiler/java/full/BUILD.bazel | 1 +
 src/google/protobuf/compiler/java/lite/BUILD.bazel | 1 +
 src/google/protobuf/compiler/kotlin/BUILD.bazel    | 1 +
 src/google/protobuf/compiler/php/BUILD.bazel       | 1 +
 src/google/protobuf/compiler/rust/BUILD.bazel      | 2 ++
 toolchain/BUILD.bazel                              | 2 ++
 12 files changed, 16 insertions(+)

diff --git a/lua/BUILD.bazel b/lua/BUILD.bazel
index 389e5da7635ca..db956713bd849 100644
--- a/lua/BUILD.bazel
+++ b/lua/BUILD.bazel
@@ -5,6 +5,9 @@
 # license that can be found in the LICENSE file or at
 # https://developers.google.com/open-source/licenses/bsd
 
+load("@rules_cc//cc:cc_binary.bzl", "cc_binary")
+load("@rules_cc//cc:cc_library.bzl", "cc_library")
+load("@rules_cc//cc:cc_test.bzl", "cc_test")
 load("//bazel:proto_library.bzl", "proto_library")
 load(
     "//lua:lua_proto_library.bzl",
diff --git a/pkg/test/BUILD.bazel b/pkg/test/BUILD.bazel
index d0954f0126ba2..4fd01c9759643 100644
--- a/pkg/test/BUILD.bazel
+++ b/pkg/test/BUILD.bazel
@@ -1,5 +1,6 @@
 # Tests for CMake file list generation
 
+load("@rules_cc//cc:cc_library.bzl", "cc_library")
 load("@rules_shell//shell:sh_test.bzl", "sh_test")
 load("//pkg:build_systems.bzl", "gen_file_lists")
 load("//pkg:cc_dist_library.bzl", "cc_dist_library")
diff --git a/ruby/ext/google/protobuf_c/BUILD.bazel b/ruby/ext/google/protobuf_c/BUILD.bazel
index 00458e2eedbe4..63276d538cc5c 100644
--- a/ruby/ext/google/protobuf_c/BUILD.bazel
+++ b/ruby/ext/google/protobuf_c/BUILD.bazel
@@ -1,4 +1,5 @@
 load("@build_bazel_rules_apple//apple:apple_binary.bzl", "apple_binary")
+load("@rules_cc//cc:cc_library.bzl", "cc_library")
 load("@rules_pkg//pkg:mappings.bzl", "pkg_files", "strip_prefix")
 load("//upb/cmake:build_defs.bzl", "staleness_test")
 
diff --git a/ruby/lib/google/BUILD.bazel b/ruby/lib/google/BUILD.bazel
index db0d7cd6b89bc..157df81b6d734 100644
--- a/ruby/lib/google/BUILD.bazel
+++ b/ruby/lib/google/BUILD.bazel
@@ -1,3 +1,4 @@
+load("@rules_cc//cc:cc_binary.bzl", "cc_binary")
 load("@rules_java//java:java_binary.bzl", "java_binary")
 load("@rules_pkg//pkg:mappings.bzl", "pkg_files", "strip_prefix")
 load("@rules_ruby//ruby:defs.bzl", "rb_library")
diff --git a/rust/defs.bzl b/rust/defs.bzl
index b787d108fc743..54dab26e25048 100644
--- a/rust/defs.bzl
+++ b/rust/defs.bzl
@@ -1,4 +1,5 @@
 """This file implements rust_proto_library."""
 
+load("@rules_cc//cc/common:cc_info.bzl", "CcInfo")
 load("@rules_rust//rust:defs.bzl", "rust_common")
 load("//bazel/common:proto_common.bzl", "proto_common")
diff --git a/src/google/protobuf/compiler/cpp/BUILD.bazel b/src/google/protobuf/compiler/cpp/BUILD.bazel
index 4d4e99d774772..ced92c04e235d 100644
--- a/src/google/protobuf/compiler/cpp/BUILD.bazel
+++ b/src/google/protobuf/compiler/cpp/BUILD.bazel
@@ -2,6 +2,7 @@
 # Protocol Buffers Compiler - C++ code generator
 ################################################################################
 
+load("@rules_cc//cc:cc_binary.bzl", "cc_binary")
 load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")
 load("@rules_pkg//pkg:mappings.bzl", "pkg_files", "strip_prefix")
 load("//bazel:cc_proto_library.bzl", "cc_proto_library")
diff --git a/src/google/protobuf/compiler/java/full/BUILD.bazel b/src/google/protobuf/compiler/java/full/BUILD.bazel
index 6bffaa10fbc87..54b4ae9cd186d 100644
--- a/src/google/protobuf/compiler/java/full/BUILD.bazel
+++ b/src/google/protobuf/compiler/java/full/BUILD.bazel
@@ -1,6 +1,7 @@
 # We use abbreviated target names in this directory to work around:
 #     https://github.com/bazelbuild/bazel/issues/18683
 
+load("@rules_cc//cc:cc_library.bzl", "cc_library")
 load("//build_defs:cpp_opts.bzl", "COPTS")
 
 cc_library(
diff --git a/src/google/protobuf/compiler/java/lite/BUILD.bazel b/src/google/protobuf/compiler/java/lite/BUILD.bazel
index 02af1b3f917df..5e04135abbac0 100644
--- a/src/google/protobuf/compiler/java/lite/BUILD.bazel
+++ b/src/google/protobuf/compiler/java/lite/BUILD.bazel
@@ -1,3 +1,4 @@
+load("@rules_cc//cc:cc_library.bzl", "cc_library")
 load("//build_defs:cpp_opts.bzl", "COPTS")
 
 cc_library(
diff --git a/src/google/protobuf/compiler/kotlin/BUILD.bazel b/src/google/protobuf/compiler/kotlin/BUILD.bazel
index 4f866ae02e1b7..5a1e1b727092b 100644
--- a/src/google/protobuf/compiler/kotlin/BUILD.bazel
+++ b/src/google/protobuf/compiler/kotlin/BUILD.bazel
@@ -1,3 +1,4 @@
+load("@rules_cc//cc:cc_library.bzl", "cc_library")
 load("//build_defs:cpp_opts.bzl", "COPTS")
 
 cc_library(
diff --git a/src/google/protobuf/compiler/php/BUILD.bazel b/src/google/protobuf/compiler/php/BUILD.bazel
index 930db4476125b..d41fe6d122adb 100644
--- a/src/google/protobuf/compiler/php/BUILD.bazel
+++ b/src/google/protobuf/compiler/php/BUILD.bazel
@@ -2,6 +2,7 @@
 # Protocol Buffers Compiler - PHP code generator
 ################################################################################
 
+load("@rules_cc//cc:cc_test.bzl", "cc_test")
 load("@rules_cc//cc:defs.bzl", "cc_library")
 load("@rules_pkg//pkg:mappings.bzl", "pkg_files", "strip_prefix")
 load("//build_defs:cpp_opts.bzl", "COPTS")
diff --git a/src/google/protobuf/compiler/rust/BUILD.bazel b/src/google/protobuf/compiler/rust/BUILD.bazel
index e5766c2abd40b..116e44b76df9c 100644
--- a/src/google/protobuf/compiler/rust/BUILD.bazel
+++ b/src/google/protobuf/compiler/rust/BUILD.bazel
@@ -9,6 +9,8 @@
 # Protocol Buffers Compiler - Rust code generator
 ################################################################################
 
+load("@rules_cc//cc:cc_binary.bzl", "cc_binary")
+load("@rules_cc//cc:cc_test.bzl", "cc_test")
 load("@rules_cc//cc:defs.bzl", "cc_library")
 load("//build_defs:cpp_opts.bzl", "COPTS")
 load(
diff --git a/toolchain/BUILD.bazel b/toolchain/BUILD.bazel
index 524fa14390501..4cb056c75ff66 100644
--- a/toolchain/BUILD.bazel
+++ b/toolchain/BUILD.bazel
@@ -1,4 +1,6 @@
 load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
+load("@rules_cc//cc/toolchains:cc_toolchain.bzl", "cc_toolchain")
+load("@rules_cc//cc/toolchains:cc_toolchain_suite.bzl", "cc_toolchain_suite")
 load(":cc_toolchain_config.bzl", "cc_toolchain_config")
 
 package(default_visibility = ["//visibility:public"])
