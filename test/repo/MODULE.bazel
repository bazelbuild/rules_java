module(name = "integration_test_repo")

bazel_dep(name = "rules_java", version = "7.5.0")
archive_override(
    module_name = "rules_java",
    urls = [
        "file:///tmp/rules_java-HEAD.tar.gz",
        "file:///C:/b/rules_java-HEAD.tar.gz",
    ],
)

http_jar = use_repo_rule("@rules_java//java:http_jar.bzl", "http_jar")

http_jar(
    name = "my_jar",
    urls = [
        "file:///tmp/my_jar.jar",
        "file:///C:/b/my_jar.jar",
    ],
)

java_toolchains = use_extension("@rules_java//java:extensions.bzl", "toolchains")
use_repo(
    java_toolchains,
    "local_jdk",
    "remote_java_tools",
    "remote_java_tools_darwin_arm64",
    "remote_java_tools_darwin_x86_64",
    "remote_java_tools_linux",
    "remote_java_tools_windows",
    "remotejdk11_linux",
    "remotejdk11_linux_aarch64",
    "remotejdk11_linux_ppc64le",
    "remotejdk11_linux_s390x",
    "remotejdk11_macos",
    "remotejdk11_macos_aarch64",
    "remotejdk11_win",
    "remotejdk11_win_arm64",
    "remotejdk17_linux",
    "remotejdk17_linux_s390x",
    "remotejdk17_macos",
    "remotejdk17_macos_aarch64",
    "remotejdk17_win",
    "remotejdk17_win_arm64",
    "remotejdk21_linux",
    "remotejdk21_linux_riscv64",
    "remotejdk21_macos",
    "remotejdk21_macos_aarch64",
    "remotejdk21_win",
)

custom_jdk = use_extension("@rules_java//java:extensions.bzl", "java_repository")
custom_jdk.remote(
    name = "my_funky_jdk",
    prefix = "funky",
    strip_prefix = "zulu24.32.13-ca-jdk24.0.2-linux_x64",
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    urls = [
        "https://cdn.azul.com/zulu/bin/zulu24.32.13-ca-jdk24.0.2-linux_x64.tar.gz",
    ],
    version = "24",
)
use_repo(custom_jdk, "my_funky_jdk", "my_funky_jdk_toolchain_config_repo")

register_toolchains("@my_funky_jdk_toolchain_config_repo//:all")

register_toolchains("//:all")

bazel_dep(name = "rules_shell", version = "0.4.0", dev_dependency = True)
bazel_dep(name = "platforms", version = "0.0.11", dev_dependency = True)
